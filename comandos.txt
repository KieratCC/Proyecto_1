
---Comandos de gestion---

Esta es mi primera prueba del inicio del curso ded git y github

git init - aplica en la carpeta lo necesario para usar git.

git status - muestra el estado de la carpeta segun git

git add - agrega al traking para poder hacer un commit

git rm --cached - elimina el add si ya lo colocaste (antes de aplicarlo, este aun esta en memoria RAM)

git commit -m "mensaje" - agrega el estado traqueado como un commit

git show - Puedes ver los cambios realizados a un archivo en el ultimo commit

git diff - Muetra la diferencia entre dos commits

git log - muetra la historia de los archivos segun los commits

git reset @Commit ID@ --hard - regresa en el tiempo al commit seleccionado borrando la info del staging y los commits, con --soft - en el directorio de trabajo se devuelve pero en el staging y commits continuan intactos

git log --stat - muestra info sobre los commits mas detallada

git checkout @Commit ID@ @nombre del archivo@ - te permite remplazar el archivo que escogiste por una version antigua.

git checkout master @nombre del archivo@ - Si realisaste un checkout este te permite volver a la rama principal o ir a cualquier otra rama

git rm - elimina archivos sin eliminar su historial de commits, puedes recuperarlo luego de ser el caso (--cached - el archivo pasa a estar untracked) (--force - Elimina el archivo del todo)

git branch - Crea una rama

---Comandos Especiales---

git rebase master - Este comando se aplica en la rama en la que quieres ingresar a la otra


git stash - rebierte al ultimo commit y guarda los cambios posteriores para luego poder usarlo

git stash list - muestra la lista de los cambios guardados en stash

git stash pop - muestra los cambios guardados y en el editor puedes terminar los cambio o descartarlos con una revercion.

git stash branch "nombre de la rama" - coloca los cambios guardados en la rama que se esta creando

git stash drop - elimina lo guardado en al lista


Nota: git clean solo elimina las cosas que puede trakear

git clean - Permite eliminar archivos creados por error o que concidera que no sirven 

git clean --dry-run - Muestra que archivos se van a borrar

git clean -f - aplica lo que puedes ver en --dry-run


---Tags---

git log --all --graph --decorate --oneline - Comando que permite ver el historial de commits de manera ordenada para ver el ID de commit para crear tags o entre otras funciones

git tag -a v0.1 -m "Resultado de las primeras clases del curso" c5251e9 - Crea un tag

git tag - Ensena los nombres de los tags creados

git tag -d mal - Elimina los tag de manera local

git push origin --tags - envia al servidor los tag unicamente

git push origin :refs/tags/nombre - elimina el tag de github

---Manejo de ramas---

git branch - Muestra las ramas que existen

git show-branch --all  - Muentra info sobre las ramas 

gitk - Abre un software donde puedes ver la info sobre las ramas


---servidor---

origen [la rama que quieres enviar]

git clone url - hace una copia de los archivos del server en tu maquina

git push - envia los datos de los commits al servidor

git fetch - trae una copia del repositorio local del server

git merge - trae una copia del directorio local del server

git pull - en un conjunto entre (fetch y merge)
    git pull origin master --allow-unreleted-histories

git remote add origin - crea un enlace para hacer fetch y push a github

git remote -v - ense√±a el nombre del origen 


---Crear llave ssh---

ssh-keygen -t rsa -b 4096 -C "correo" - comando para crear llaves de cifrado

eval $(ssh-agent -s) - nos muestra si el proceso de llave criptografica esta corriedon correctamente

ssh-add ~/.ssh/id_rsa - agrega la llave privada al sistema



---Configuracion---

Notas: debes identificarte para saber bien quien es el responsable de los cambios 

git config - muestras los comandos disponibles la apra configuracion de git

git config --list - Muestra info de la configuracion actual de git

git config --list --show-origin - Muetra donde estan guardadas las configuraciones que se mutran con --list

git config --global user.name name - Cambiar el nombre del usuario al hacer commits

git config --global user.mail mail - Cambia el email del usuario al hacer commits

